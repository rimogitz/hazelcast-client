{"version":3,"sources":["components/TutorialHeader/index.js","components/TutorialHeader/TutorialHeader.js","content/LandingPage/LandingPage.js","content/LandingPage/index.js","content/RepoPage/RepoTable.js","content/RepoPage/RepoPage.js","content/RepoPage/index.js","App.js","serviceWorker.js","index.js"],"names":["TutorialHeader","react_default","a","createElement","UIShell","aria-label","element","Link","to","prefix","_20_default","user_avatar_20_default","app_switcher_20_default","props","selected","triggerHref","role","href","tabIndex","LandingPage","className","Breadcrumb","noTrailingSlash","BreadcrumbItem","Tabs","Object","assign","Tab","label","Button","src","concat","process","alt","RepoTable","_ref","rows","headers","DataTable","render","_ref2","getHeaderProps","getRowProps","getTableProps","TableContainer","title","description","Table","TableHead","TableRow","TableExpandHeader","map","header","TableHeader","TableBody","row","Fragment","key","id","TableExpandRow","cells","cell","TableCell","value","TableExpandedRow","colSpan","length","name","createdAt","updatedAt","issueCount","stars","links","RepoPage","RepoPage_RepoTable","App","components_TutorialHeader","react_router","exact","path","component","Component","Boolean","window","location","hostname","match","ReactDOM","react_router_dom","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6bc8fd5b.chunk.js","sourcesContent":["import TutorialHeader from './TutorialHeader';\nexport default TutorialHeader;\n","import React from 'react';\nimport {\n  Header,\n  HeaderName,\n  HeaderNavigation,\n  HeaderMenuItem,\n  HeaderGlobalBar,\n  HeaderGlobalAction,\n  SkipToContent,\n} from 'carbon-components-react/lib/components/UIShell';\nimport Notification20 from '@carbon/icons-react/lib/notification/20';\nimport UserAvatar20 from '@carbon/icons-react/lib/user--avatar/20';\nimport AppSwitcher20 from '@carbon/icons-react/lib/app-switcher/20';\nimport { Link } from 'react-router-dom';\n\nconst TutorialHeader = () => (\n  <Header aria-label=\"Carbon Tutorial\">\n    <SkipToContent />\n    <HeaderName element={Link} to=\"/\" prefix=\"IBM\">\n      Carbon Tutorial\n    </HeaderName>\n    <HeaderNavigation aria-label=\"Carbon Tutorial\">\n      <HeaderMenuItem element={Link} to=\"/repos\">\n        Repositories\n      </HeaderMenuItem>\n    </HeaderNavigation>\n    <HeaderGlobalBar>\n      <HeaderGlobalAction aria-label=\"Notifications\">\n        <Notification20 />\n      </HeaderGlobalAction>\n      <HeaderGlobalAction aria-label=\"User Avatar\">\n        <UserAvatar20 />\n      </HeaderGlobalAction>\n      <HeaderGlobalAction aria-label=\"App Switcher\">\n        <AppSwitcher20 />\n      </HeaderGlobalAction>\n    </HeaderGlobalBar>\n  </Header>\n);\n\nexport default TutorialHeader;\n","import React from 'react';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Button,\n  Tabs,\n  Tab,\n} from 'carbon-components-react';\n\nconst props = {\n  tabs: {\n    selected: 0,\n    triggerHref: '#',\n    role: 'navigation',\n  },\n  tab: {\n    href: '#',\n    role: 'presentation',\n    tabIndex: 0,\n  },\n};\n\nconst LandingPage = () => {\n  return (\n    <div className=\"bx--grid bx--grid--full-width landing-page\">\n      <div className=\"bx--row landing-page__banner\">\n        <div className=\"bx--col-lg-16\">\n          <Breadcrumb noTrailingSlash aria-label=\"Page navigation\">\n            <BreadcrumbItem>\n              <a href=\"/\">Getting started</a>\n            </BreadcrumbItem>\n          </Breadcrumb>\n          <h1 className=\"landing-page__heading\">\n            Design &amp; build with Carbon\n          </h1>\n        </div>\n      </div>\n      <div className=\"bx--row landing-page__r2\">\n        <div className=\"bx--col bx--no-gutter\">\n          <Tabs {...props.tabs} aria-label=\"Tab navigation\">\n            <Tab {...props.tab} label=\"About\">\n              <div className=\"bx--grid bx--grid--no-gutter bx--grid--full-width\">\n                <div className=\"bx--row landing-page__tab-content\">\n                  <div className=\"bx--col-md-4 bx--col-lg-7\">\n                    <h2 className=\"landing-page__subheading\">\n                      What is Carbon?\n                    </h2>\n                    <p className=\"landing-page__p\">\n                      Carbon is IBMâ€™s open-source design system for digital\n                      products and experiences. With the IBM Design Language as\n                      its foundation, the system consists of working code,\n                      design tools and resources, human interface guidelines,\n                      and a vibrant community of contributors.\n                    </p>\n                    <Button>Learn more</Button>\n                  </div>\n                  <div className=\"bx--col-md-4 bx--offset-lg-1 bx--col-lg-8\">\n                    <img\n                      className=\"landing-page__illo\"\n                      src={`${process.env.PUBLIC_URL}/tab-illo.png`}\n                      alt=\"Carbon illustration\"\n                    />\n                  </div>\n                </div>\n              </div>\n            </Tab>\n            <Tab {...props.tab} label=\"Design\">\n              <div className=\"bx--grid bx--grid--no-gutter bx--grid--full-width\">\n                <div className=\"bx--row landing-page__tab-content\">\n                  <div className=\"bx--col-lg-16\">\n                    Rapidly build beautiful and accessible experiences. The\n                    Carbon kit contains all resources you need to get started.\n                  </div>\n                </div>\n              </div>\n            </Tab>\n            <Tab {...props.tab} label=\"Develop\">\n              <div className=\"bx--grid bx--grid--no-gutter bx--grid--full-width\">\n                <div className=\"bx--row landing-page__tab-content\">\n                  <div className=\"bx--col-lg-16\">\n                    Carbon provides styles and components in Vanilla, React,\n                    Angular, and Vue for anyone building on the web.\n                  </div>\n                </div>\n              </div>\n            </Tab>\n          </Tabs>\n        </div>\n      </div>\n      <div className=\"bx--row landing-page__r3\">\n        <div className=\"bx--col-md-4 bx--col-lg-4\">\n          <h3 className=\"landing-page__label\">The Principles</h3>\n        </div>\n        <div className=\"bx--col-md-4 bx--col-lg-4\">Carbon is Open</div>\n        <div className=\"bx--col-md-4 bx--col-lg-4\">Carbon is Modular</div>\n        <div className=\"bx--col-md-4 bx--col-lg-4\">Carbon is Consistent</div>\n      </div>\n    </div>\n  );\n};\n\nexport default LandingPage;\n","import LandingPage from './LandingPage';\nexport default LandingPage;\n","import React from 'react';\nimport {\n    DataTable,\n    TableContainer,\n    Table,\n    TableHead,\n    TableRow,\n    TableExpandHeader,\n    TableHeader,\n    TableBody,\n    TableExpandRow,\n    TableCell,\n    TableExpandedRow,\n  } from \"carbon-components-react\";\n  \n  const RepoTable = ({ rows, headers }) => {\n    return (\n      <DataTable\n        rows={rows}\n        headers={headers}\n        render={({\n          rows,\n          headers,\n          getHeaderProps,\n          getRowProps,\n          getTableProps,\n        }) => (\n          <TableContainer\n            title=\"Carbon Repositories\"\n            description=\"A collection of public Carbon repositories.\">\n            <Table {...getTableProps()}>\n              <TableHead>\n                <TableRow>\n                  <TableExpandHeader />\n                  {headers.map(header => (\n                    <TableHeader {...getHeaderProps({ header })}>\n                      {header.header}\n                    </TableHeader>\n                  ))}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {rows.map(row => (\n                  <React.Fragment key={row.id}>\n                    <TableExpandRow {...getRowProps({ row })}>\n                      {row.cells.map(cell => (\n                        <TableCell key={cell.id}>{cell.value}</TableCell>\n                      ))}\n                    </TableExpandRow>\n                    <TableExpandedRow colSpan={headers.length + 1}>\n                      <p>Row description</p>\n                    </TableExpandedRow>\n                  </React.Fragment>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        )}\n      />\n    );\n  };\n  \n  export default RepoTable;","import React from \"react\";\nimport RepoTable from \"./RepoTable\";\n\nconst headers = [\n  {\n    key: \"name\",\n    header: \"Name\",\n  },\n  {\n    key: \"createdAt\",\n    header: \"Created\",\n  },\n  {\n    key: \"updatedAt\",\n    header: \"Updated\",\n  },\n  {\n    key: \"issueCount\",\n    header: \"Open Issues\",\n  },\n  {\n    key: \"stars\",\n    header: \"Stars\",\n  },\n  {\n    key: \"links\",\n    header: \"Links\",\n  },\n];\n\nconst rows = [\n  {\n    id: \"1\",\n    name: \"Repo 1\",\n    createdAt: \"Date\",\n    updatedAt: \"Date\",\n    issueCount: \"123\",\n    stars: \"456\",\n    links: \"Links\",\n  },\n  {\n    id: \"2\",\n    name: \"Repo 2\",\n    createdAt: \"Date\",\n    updatedAt: \"Date\",\n    issueCount: \"123\",\n    stars: \"456\",\n    links: \"Links\",\n  },\n  {\n    id: \"3\",\n    name: \"Repo 3\",\n    createdAt: \"Date\",\n    updatedAt: \"Date\",\n    issueCount: \"123\",\n    stars: \"456\",\n    links: \"Links\",\n  },\n];\n\nconst RepoPage = () => {\n  return (\n    <div className=\"bx--grid bx--grid--full-width bx--grid--no-gutter repo-page\">\n      <div className=\"bx--row repo-page__r1\">\n        <div className=\"bx--col-lg-16\">\n        <RepoTable headers={headers} rows={rows} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RepoPage;\n\n","import RepoPage from './RepoPage';\nexport default RepoPage;\n","import React, { Component } from 'react';\nimport './app.scss';\nimport { Content } from 'carbon-components-react/lib/components/UIShell';\nimport TutorialHeader from './components/TutorialHeader';\nimport { Route, Switch } from 'react-router-dom';\nimport LandingPage from './content/LandingPage';\nimport RepoPage from './content/RepoPage';\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <TutorialHeader />\n        <Content>\n          <Switch>\n            <Route exact path=\"/\" component={LandingPage} />\n            <Route path=\"/repos\" component={RepoPage} />\n          </Switch>\n        </Content>\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.array.fill\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es6.string.trim\";\nimport \"core-js/modules/es7.object.values\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}