{"version":3,"sources":["components/Header/index.js","components/Header/Header.js","content/LandingPage/LandingPage.js","content/LandingPage/index.js","content/AccountPage/AccountTable.js","content/AccountPage/AccountPage.js","content/AccountPage/index.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","UIShell","aria-label","element","Link","to","prefix","_20_default","user_avatar_20_default","app_switcher_20_default","props","selected","triggerHref","role","href","tabIndex","LandingPage","className","Breadcrumb","noTrailingSlash","BreadcrumbItem","Tabs","Object","assign","Tab","label","Button","src","concat","process","alt","AccountTable","_ref","rows","headers","DataTable","render","_ref2","getHeaderProps","TableContainer","title","Table","TableHead","TableRow","map","header","TableHeader","TableBody","row","key","id","cells","cell","TableCell","value","date","type","amount","balance","AccountPage","AccountPage_AccountTable","App","Fragment","components_Header","react_router","exact","path","component","Component","Boolean","window","location","hostname","match","ReactDOM","react_router_dom","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ff97e938.chunk.js","sourcesContent":["import Header from './Header';\nexport default Header;\n","import React from 'react';\nimport {\n  Header,\n  HeaderName,\n  HeaderNavigation,\n  HeaderMenuItem,\n  HeaderGlobalBar,\n  HeaderGlobalAction,\n  SkipToContent,\n} from 'carbon-components-react/lib/components/UIShell';\nimport Notification20 from '@carbon/icons-react/lib/notification/20';\nimport UserAvatar20 from '@carbon/icons-react/lib/user--avatar/20';\nimport AppSwitcher20 from '@carbon/icons-react/lib/app-switcher/20';\nimport { Link } from 'react-router-dom';\n\nconst TutorialHeader = () => (\n  <Header aria-label=\"Carbon Tutorial\">\n    <SkipToContent />\n    <HeaderName element={Link} to=\"/\" prefix=\"\">\n      ACME\n    </HeaderName>\n    <HeaderNavigation aria-label=\"Carbon Tutorial\">\n      <HeaderMenuItem element={Link} to=\"/account\">\n        Account Info\n      </HeaderMenuItem>\n    </HeaderNavigation>\n    <HeaderGlobalBar>\n      <HeaderGlobalAction aria-label=\"Notifications\">\n        <Notification20 />\n      </HeaderGlobalAction>\n      <HeaderGlobalAction aria-label=\"User Avatar\">\n        <UserAvatar20 />\n      </HeaderGlobalAction>\n      <HeaderGlobalAction aria-label=\"App Switcher\">\n        <AppSwitcher20 />\n      </HeaderGlobalAction>\n    </HeaderGlobalBar>\n  </Header>\n);\n\nexport default TutorialHeader;\n","import React from 'react';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Button,\n  Tabs,\n  Tab,\n} from 'carbon-components-react';\n\nconst props = {\n  tabs: {\n    selected: 0,\n    triggerHref: '#',\n    role: 'navigation',\n  },\n  tab: {\n    href: '#',\n    role: 'presentation',\n    tabIndex: 0,\n  },\n};\n\nconst LandingPage = () => {\n  return (\n    <div className=\"bx--grid bx--grid--full-width landing-page\">\n      <div className=\"bx--row landing-page__banner\">\n        <div className=\"bx--col-lg-16\">\n          <Breadcrumb noTrailingSlash aria-label=\"Page navigation\">\n            <BreadcrumbItem>\n              <a href=\"/\">Welcome</a>\n            </BreadcrumbItem>\n          </Breadcrumb>\n          <h1 className=\"landing-page__heading\">Get your free Account</h1>\n        </div>\n      </div>\n      <div className=\"bx--row landing-page__r2\">\n        <div className=\"bx--col bx--no-gutter\">\n          <Tabs {...props.tabs} aria-label=\"Tab navigation\">\n            <Tab {...props.tab} label=\"About\">\n              <div className=\"bx--grid bx--grid--no-gutter bx--grid--full-width\">\n                <div className=\"bx--row landing-page__tab-content\">\n                  <div className=\"bx--col-md-4 bx--col-lg-7\">\n                    <h2 className=\"landing-page__subheading\">\n                      Free basic services\n                    </h2>\n                    <p className=\"landing-page__p\">\n                      This current account is free of charge. Add optional\n                      extras if you need them. Pay only for what you use.\n                    </p>\n                    <Button>Learn more</Button>\n                  </div>\n                  <div className=\"bx--col-md-4 bx--offset-lg-1 bx--col-lg-8\">\n                    <img\n                      className=\"landing-page__illo\"\n                      src={`${process.env.PUBLIC_URL}/banking-home.png`}\n                      alt=\"Carbon illustration\"\n                    />\n                  </div>\n                </div>\n              </div>\n            </Tab>\n            <Tab {...props.tab} label=\"What's included ?\">\n              <div className=\"bx--grid bx--grid--no-gutter bx--grid--full-width\">\n                <div className=\"bx--row landing-page__tab-content\">\n                  <div className=\"bx--col-lg-16\">\n                    Included with our free current account Free current account\n                    online.<br /> All these standard services are free of\n                    charge:\n                    <ul>\n                      <li>\n                        - A debit card for making secure, fast payments in\n                        Europe\n                      </li>\n                      <li>- Contactless payments with your card</li>\n                      <li>- Online banking on your PC and tablet</li>\n                      <li>- Mobile banking on your smartphone</li>\n                      <li>- Cash withdrawals in euro at all ATMs</li>\n                      <li>- Banking at ACME self-service terminals</li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n            </Tab>\n            <Tab {...props.tab} label=\"PayPal\">\n              <div className=\"bx--grid bx--grid--no-gutter bx--grid--full-width\">\n                <div className=\"bx--row landing-page__tab-content\">\n                  <div className=\"bx--col-lg-16\">\n                    You can link your PayPal account with ACME Mobile and get a\n                    24/7 view – no matter where you are – of what you've spent\n                    and what's been paid into that account. Now that's even more\n                    all-in-one convenience.\n                  </div>\n                </div>\n              </div>\n            </Tab>\n          </Tabs>\n        </div>\n      </div>\n      <div className=\"bx--row landing-page__r3\">\n        <div className=\"bx--col-md-4 bx--col-lg-4\">\n          <h3 className=\"landing-page__label\">More information</h3>\n        </div>\n        <div className=\"bx--col-md-4 bx--col-lg-4\">Bank Card Regulations</div>\n        <div className=\"bx--col-md-4 bx--col-lg-4\">\n          General Banking Terms and Conditions\n        </div>\n        <div className=\"bx--col-md-4 bx--col-lg-4\">\n          Fee Information Document\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LandingPage;\n","import LandingPage from './LandingPage';\nexport default LandingPage;\n","import React from 'react';\nimport {\n    DataTable,\n    TableContainer,\n    Table,\n    TableHead,\n    TableHeader,\n    TableBody,\n    TableRow,\n    TableCell,\n  } from \"carbon-components-react\";\n  \n  const AccountTable = ({ rows, headers }) => {\n    return (\n      <DataTable\n        rows={rows}\n        headers={headers}\n        render={({\n          rows,\n          headers,\n          getHeaderProps\n        }) => (\n          <TableContainer title=\"Recent Transactions\">\n            <Table>\n              <TableHead>\n                <TableRow>\n                  {headers.map(header => (\n                    <TableHeader {...getHeaderProps({ header })}>\n                      {header.header}\n                    </TableHeader>\n                  ))}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {rows.map(row => (\n                  \n                    <TableRow key={row.id}>\n                      {row.cells.map(cell => (\n                        <TableCell key={cell.id}>{cell.value}</TableCell>\n                      ))}\n                    </TableRow>\n                  \n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        )}\n      />\n    );\n  };\n  \n  export default AccountTable;","import React from \"react\";\nimport AccountTable from \"./AccountTable\";\n\nconst headers = [\n  {\n    key: \"id\",\n    header: \"id\"\n  },\n  {\n    key: \"date\",\n    header: \"Date\",\n  },\n  {\n    key: \"type\",\n    header: \"Type\",\n  },\n  {\n    key: \"amount\",\n    header: \"Amount\",\n  },\n  {\n    key: \"balance\",\n    header: \"Balance\",\n  }\n];\n\nconst rows = [\n  {\n    id: \"1\",\n    date: \"950324\",\n    type: \"CREDIT\",\n    amount: \"1000.00\",\n    balance: \"1000.00\"\n  },\n  {\n    id: \"2\",\n    date: \"950424\",\n    type: \"CREDIT\",\n    amount: \"2300.00\",\n    balance: \"3300.00\"\n  },\n  {\n    id: \"3\",\n    date: \"950524\",\n    type: \"DEBIT\",\n    amount: \"1000.00\",\n    balance: \"2300.00\"\n  },\n  {\n    id: \"4\",\n    date: \"950624\",\n    type: \"CREDIT\",\n    amount: \"1700.00\",\n    balance: \"4000.00\"\n  }\n];\n\nconst AccountPage = () => {\n  return (\n    <div className=\"bx--grid bx--grid--full-width bx--grid--no-gutter repo-page\">\n      <div className=\"bx--row repo-page__r1\">\n        <div className=\"bx--col-lg-16\">\n        <AccountTable headers={headers} rows={rows} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AccountPage;\n\n","import AccountPage from './AccountPage';\nexport default AccountPage;\n","import React, { Component } from 'react';\nimport './app.scss';\nimport { Content } from 'carbon-components-react/lib/components/UIShell';\nimport Header from './components/Header';\nimport { Route, Switch } from 'react-router-dom';\nimport LandingPage from './content/LandingPage';\nimport AccountPage from './content/AccountPage';\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Header />\n        <Content>\n          <Switch>\n            <Route exact path=\"/\" component={LandingPage} />\n            <Route path=\"/account\" component={AccountPage} />\n          </Switch>\n        </Content>\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.array.fill\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es6.string.trim\";\nimport \"core-js/modules/es7.object.values\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}